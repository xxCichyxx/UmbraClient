/*
 * UmbraClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/xxCichyxx/UmbraClient
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.other

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.c03NoMoveValue
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC00Value
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC03Value
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC07Value
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC0AValue
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC0BValue
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC0FValue
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.cancelC13Value
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.debugMessage
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.DisablerMode
import net.ccbluex.liquidbounce.utils.MovementUtils
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.network.play.client.C0APacketAnimation
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C07PacketPlayerDigging
import net.minecraft.network.play.client.C13PacketPlayerAbilities
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C03PacketPlayer.*

/**
 *
 * @author Zywl
 */
object BasicDisabler : DisablerMode("BasicDisabler") {

    val basicTypePrefix = "$modeName-"

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C00PacketKeepAlive && cancelC00Value) {
            event.cancelEvent()
            debugMessage("Cancel C00-KeepAlive")
        }
        if (packet is C0FPacketConfirmTransaction && cancelC0FValue) {
            event.cancelEvent()
            debugMessage("Cancel C0F-Transaction")
        }
        if (packet is C0APacketAnimation && cancelC0AValue) {
            event.cancelEvent()
            debugMessage("Cancel C0A-Swing")
        }
        if (packet is C0BPacketEntityAction && cancelC0BValue) {
            event.cancelEvent()
            debugMessage("Cancel C0B-Action")
        }
        if (packet is C07PacketPlayerDigging && cancelC07Value) {
            event.cancelEvent()
            debugMessage("Cancel C07-Digging")
        }
        if (packet is C13PacketPlayerAbilities && cancelC13Value) {
            event.cancelEvent()
            debugMessage("Cancel C13-Abilities")
        }
        if (packet is C03PacketPlayer && !(packet is C04PacketPlayerPosition || packet is C05PacketPlayerLook || packet is C06PacketPlayerPosLook) && cancelC03Value) {
            if (c03NoMoveValue && MovementUtils.isMoving)
                return
            event.cancelEvent()
            debugMessage("Cancel C03-Flying")
        }
    }
}
